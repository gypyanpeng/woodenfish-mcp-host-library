"""初始化。


"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "893b5792bdcd"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """升级 schema。"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chats",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True).with_variant(sa.Text(), "sqlite"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True,
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("user_type", sa.CHAR(length=10), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True,
    )
    op.create_table(
        "messages",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True).with_variant(sa.Text(), "sqlite"),
            nullable=False,
        ),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("role", sa.Text(), nullable=False),
        sa.Column("chat_id", sa.Text(), nullable=False),
        sa.Column("message_id", sa.Text(), nullable=False),
        sa.Column("files", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["chat_id"], ["chats.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("message_id"),
        if_not_exists=True,
    )
    op.create_index(
        "idx_messages_chat_id",
        "messages",
        ["chat_id"],
        unique=False,
        postgresql_using="hash",
        if_not_exists=True,
    )
    op.create_index(
        "messages_message_id_index",
        "messages",
        ["message_id"],
        unique=False,
        postgresql_using="hash",
        if_not_exists=True,
    )
    op.create_table(
        "resource_usage",
        sa.Column(
            "id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("message_id", sa.Text(), nullable=False),
        sa.Column("model", sa.Text(), nullable=False),
        sa.Column("total_input_tokens", sa.BigInteger(), nullable=False),
        sa.Column("total_output_tokens", sa.BigInteger(), nullable=False),
        sa.Column("total_run_time", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["message_id"], ["messages.message_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True,
    )
    op.create_index(
        "idx_resource_usage_message_id",
        "resource_usage",
        ["message_id"],
        unique=False,
        postgresql_using="hash",
        if_not_exists=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """降级 schema。"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_resource_usage_message_id",
        table_name="resource_usage",
        postgresql_using="hash",
        if_exists=True,
    )
    op.drop_table("resource_usage", if_exists=True)
    op.drop_index(
        "messages_message_id_index",
        table_name="messages",
        postgresql_using="hash",
        if_exists=True,
    )
    op.drop_index(
        "idx_messages_chat_id",
        table_name="messages",
        postgresql_using="hash",
        if_exists=True,
    )
    op.drop_table("messages", if_exists=True)
    op.drop_table("users", if_exists=True)
    op.drop_table("chats", if_exists=True)
    # ### end Alembic commands ###
